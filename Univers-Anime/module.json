{
  "moduleName": "Univers-Anime",
  "moduleInitials": "UA",
  "moduleDesc": "Module for Univers-Anime",
  "developer": "Happy4Game",
  "moduleID": "UAFR",
  "moduleImage": "https://www.universanime.co/favicon1.ico?v=1",
  "moduleVersion": "1.0.0",
  "moduleLenguage": "fr",
  "moduleHasVideos": "true",
  "randomizeUserAgent": "false",
  "baseURL": "https://www.universanime.co/",
  "mainPageLeftTitle": "Last Episodes",
  "mainPageRightTitle": "Last Animes",
  "blackListed": [
    ""
  ],
  "mainPage": [
    {
      "request": "https://www.universanime.co/",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": " function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(lastEpisodes,lastAnimes) { this.lastEpisodes = lastEpisodes; this.lastAnimes = lastAnimes; } function LastAnimes(moduleID,image,link,title) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; } function LastEpisodes(moduleID,image,link,title,episode) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.episode = episode; } function MainPageObject(request,headers,method,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.headers = headers; this.method = method; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = 'UAFR'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var mainPageObject; var output; var lastAnimes = []; var lastEpisodes = []; var listOfEpisodes = document.querySelector('.recent-posts').querySelectorAll('li'); for (var i = 0; i < listOfEpisodes.length; i++){ var episodeItem = listOfEpisodes[i]; var image = episodeItem.querySelector('.post-thumb').querySelector('a > img').src; var link = episodeItem.querySelector('.post-thumb').querySelector('a').href; var title = episodeItem.querySelector('.post-content > h2').innerText; var episode = episodeItem.querySelector('.post-content > p').innerText; console.log(moduleID,image,link,title,episode); lastAnimes.push(new LastAnimes(moduleID,image,link,title)); lastEpisodes.push(new LastEpisodes(moduleID,image,link,title,episode)); } while (lastEpisodes.length % 2 != 0) { lastEpisodes.push(lastEpisodes[0]); } while (lastAnimes.length % 3 != 0) { lastAnimes.push(lastAnimes[0]); } output = new Output(lastEpisodes,lastAnimes); mainPageObject = new MainPageObject('',headers,'',extraInfo,'','',output); var finalJson = JSON.stringify(mainPageObject); savedData.innerHTML = finalJson;",
      "output": {
        "lastEpisodes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": "",
            "episode": ""
          }
        ],
        "lastAnimes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": ""
          }
        ]
      }
    }
  ],
  "search": [
    {
      "request": "https://www.universanime.co/page/<page>/?s=<searched>",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "separator": "+",
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,type,voice,stars) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.type = type; this.voice = voice; this.stars = stars; } function SearchObject(request,method,headers,separator,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.separator = separator; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = 'UAFR'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var searchPageObject; var output = []; var type = 'Anime'; var voice = 'SUB'; var stars = '★★★'; var animes = document.querySelector('.recent-posts').querySelectorAll('li'); for (var i = 0; i< animes.length; i++){ var anime = animes[i]; if (anime.querySelector('.post-thumb > a > img') != undefined){ var image = anime.querySelector('.post-thumb > a > img').src; var link = anime.querySelector('.post-thumb > a').href; var title = anime.querySelector('.post-thumb > a').title; console.log(moduleID,image,link,title,type,voice,stars); output.push(new Output(moduleID,image,link,title,type,voice,stars)); } else{ } } searchPageObject = new SearchObject('','',headers,'+',extraInfo,'','',output); var finalJson = JSON.stringify(searchPageObject); savedData.innerHTML = finalJson;",
      "output": [
        {
          "moduleID": "0",
          "image": "",
          "link": "",
          "title": "",
          "type": "",
          "voice": "",
          "stars": ""
        }
      ]
    }
  ],
  "info": [
    {
      "request": "this Can be empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,description,genres,type,status,episodes) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.type = type; this.status = status; this.episodes = episodes; } function Episodes(link,moduleID,isDecodable) { this.link = link; this.moduleID = moduleID; this.isDecodable = isDecodable; } function InfoObject(request,method,headers,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = 'UAFR'; var headers = [new Header('', '')]; var extraInfo = [new ExtraInfo('')]; var infoObject; var output; var episodes = []; var type = 'Anime'; var status = 'Unknow'; var genres = []; var desc = ''; var image = ''; var title = ''; if (document.querySelectorAll('.entry-content > p') == undefined || document.querySelectorAll('.entry-content > p')[2] == undefined){ desc = ''; } else{ desc = document.querySelectorAll('.entry-content > p')[2].innerText; } image = 'https://www.universanime.co/wp-content/uploads/2017/11/logo.univers-190x46.png'; title = document.querySelector('.breadcrumb_last').innerText; var episodeList = document.querySelectorAll('.lcp_catlist > li > a'); for (var i = 0; i < episodeList.length; i++){ var link = episodeList[i].href; episodes.push(new Episodes(link,moduleID,'false')); } episodes.reverse(); console.log(episodes); console.log(moduleID,image,parsedJson.request,title,desc,genres,type,status,episodes); output = new Output(moduleID,image,parsedJson.request,title,desc,genres,type,status,episodes); infoObject = new InfoObject('','get',headers,extraInfo,'', '',output); var finalJson = JSON.stringify(infoObject); savedData.innerHTML = finalJson;",
      "output": {
        "moduleID": "0",
        "image": "",
        "link": "",
        "title": "",
        "description": "",
        "genres": [
          ""
        ],
        "type": "",
        "status": "",
        "episodes": [
          {
            "link": "",
            "moduleID": "",
            "isDecodable": "false"
          }
        ]
      }
    }
  ],
  "episodes": [
    {
      "request": "This can be Empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "true",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(link,linkIdentifier,moduleID,isDecodable,headers) { this.link = link; this.linkIdentifier = linkIdentifier; this.moduleID = moduleID; this.isDecodable = isDecodable; this.headers = headers; } function EpisodeObject(request,method,headers,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = 'UAFR'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var episodeObject; var output = []; var episodeList = document.querySelectorAll('iframe'); for (var i = 0; i < episodeList.length; i++){ var link = episodeList[i].src; console.log(link); output.push(new Output(link,'',moduleID,'false',headers)); } episodeObject = new EpisodeObject('','',headers,extraInfo,'','',output); var finalJson = JSON.stringify(episodeObject); savedData.innerHTML = finalJson;",
      "output": [
        {
          "link": "",
          "moduleID": "",
          "linkIdentifier": "",
          "isDecodable": "false",
          "headers": [
            {
              "key": "key",
              "value": "value"
            }
          ]
        }
      ]
    }
  ]
}
