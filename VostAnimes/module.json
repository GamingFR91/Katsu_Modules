{
  "moduleName": "VostAnimes",
  "moduleInitials": "VostA",
  "moduleDesc": "Katsu module for VostAnimes website",
  "developer": "Frizrat",
  "moduleID": "19050521",
  "moduleImage": "https://vostanimes.net/wp-content/uploads/2019/09/cropped-icon-32x32-270x270.png",
  "moduleVersion": "1.1",
  "moduleLenguage": "Vf/VostFr",
  "moduleHasVideos": "true",
  "randomizeUserAgent": "false",
  "baseURL": "https://vostanimes.net/",
  "mainPageLeftTitle": "Derniers épisodes",
  "mainPageRightTitle": "Les animes",
  "blackListed": [
    ""
  ],
  "mainPage": [
    {
      "request": "https://vostanimes.net/",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(lastEpisodes,lastAnimes) { this.lastEpisodes = lastEpisodes; this.lastAnimes = lastAnimes; } function LastAnimes(moduleID,image,link,title) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; } function LastEpisodes(moduleID,image,link,title,episode) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.episode = episode; } function MainPageObject(request,headers,method,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.headers = headers; this.method = method; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '19050521'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var mainPageObject; var output; var lastAnimes = []; var lastEpisodes = []; var episodes = document.querySelector('.MovieList').querySelectorAll('a'); for (x = 0; x < episodes.length; x++) { var episode = episodes[x]; var image = episode.querySelector('img').src; if (!image.includes('https:')) { image = 'https:' + image; } var link = episode.href; var title = episode.querySelector('h3').innerText; var episode = episode.querySelector('.ClB').innerText; var episodeObject = new LastEpisodes (moduleID,image,link,title,episode); lastEpisodes.push(episodeObject); } var animes = document.querySelectorAll('.MovieList')[3].querySelectorAll('article'); for (var x = 0; x < animes.length; x++) { var anime = animes[x].querySelector('a'); var image = anime.querySelector('img').src; if (!image.includes('https:')) { image = 'https:' + image; } var link = anime.href; var title = anime.querySelector('h3').innerText; var animeObject = new LastAnimes (moduleID,image,link,title); lastAnimes.push(animeObject); } while (lastEpisodes.length % 2 != 0) { lastEpisodes.push(lastEpisodes[0]); } while (lastAnimes.length % 3 != 0) { lastAnimes.push(lastAnimes[0]); } output = new Output(lastEpisodes,lastAnimes); mainPageObject = new MainPageObject('',headers,'',extraInfo,'','',output); var finalJson = JSON.stringify(mainPageObject); savedData.innerHTML = finalJson;",
      "output": {
        "lastEpisodes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": "",
            "episode": ""
          }
        ],
        "lastAnimes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": ""
          }
        ]
      }
    }
  ],
  "search": [
    {
      "request": "https://vostanimes.net/page/<page>/?s=<searched>",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "separator": "+",
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,type,voice,stars) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.type = type; this.voice = voice; this.stars = stars; } function SearchObject(request,method,headers,separator,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.separator = separator; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '19050521'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var searchPageObject; var output = []; var animes = document.querySelector('.MovieList').querySelectorAll('li'); for(var x = 0; x < animes.length;x++) { var anime = animes[x].querySelector('a'); var image = anime.querySelector('img').src; if (!image.includes('https:')) { image = 'https:' + image; } var title = anime.querySelector('h3').innerText; var link = anime.href; var type = 'Anime'; var voice = 'Sub'; var note = '★★★★★'; var searchObject = new Output(moduleID,image,link,title,type,voice,note); output.push(searchObject); } searchPageObject = new SearchObject('','',headers,'+',extraInfo,'','',output); var finalJson = JSON.stringify(searchPageObject); savedData.innerHTML = finalJson;",
      "output": [
        {
          "moduleID": "0",
          "image": "",
          "link": "",
          "title": "",
          "type": "",
          "voice": "",
          "stars": ""
        }
      ]
    }
  ],
  "info": [
    {
      "request": "this Can be empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,description,genres,type,status,episodes) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.type = type; this.status = status; this.episodes = episodes; } function Episodes(link,moduleID,isDecodable) { this.link = link; this.moduleID = moduleID; this.isDecodable = isDecodable; } function InfoObject(request,method,headers,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var baseURL = JSON.parse(savedData.innerHTML); var moduleID = '19050521'; var headers = [new Header('', '')]; var extraInfo = [new ExtraInfo('')]; var infoObject; var output; var episodes = []; var infoList = document.querySelector('.InfoList').querySelectorAll('.AAIco-adjust'); var baseURL = document.querySelector('link[rel=canonical]').href; if (baseURL != baseURL.split('/anime/')) { var type = 'Anime'; var status = infoList[1].innerText; var saisons = document.querySelector('.TpRwCont').querySelectorAll('.Wdgt.AABox > .TPTblCn'); for (var x = 0; x < saisons.length; x++) { var content = saisons[x].querySelectorAll('tr'); for (var i = 0; i < content.length; i++) { var link = content[i].querySelector('a').href; episodes.push(new Episodes(link,moduleID,'false')); } } } else { var type = 'Film'; var status = ''; episodes.push(new Episodes(baseURL,moduleID,'false')); } var desc = document.querySelector('meta[property=\"og:depion\"]'); if (desc != null) { desc = desc.content; } else { desc = ''; } var title = document.querySelector('meta[property=\"og:title\"]').content.split('Anime en')[0]; var image = document.querySelector('.TPost.Single > header > .Image > figure > img').src; if (!image.includes('https:')) { image = 'https:' + image; } var genres = []; output = new Output(moduleID,image,baseURL,title,desc,genres,type,status,episodes); infoObject = new InfoObject('','get',headers,extraInfo,'', '',output); var finalJson = JSON.stringify(infoObject); savedData.innerHTML = finalJson;",
      "output": {
        "moduleID": "0",
        "image": "",
        "link": "",
        "title": "",
        "description": "",
        "genres": [
          ""
        ],
        "type": "",
        "status": "",
        "episodes": [
          {
            "link": "",
            "moduleID": "",
            "isDecodable": "false"
          }
        ]
      }
    }
  ],
  "episodes": [
    {
      "request": "This can be Empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "true",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(link,linkIdentifier,moduleID,isDecodable,headers) { this.link = link; this.linkIdentifier = linkIdentifier; this.moduleID = moduleID; this.isDecodable = isDecodable; this.headers = headers; } function EpisodeObject(request,method,headers,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '19050521'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var episodeObject; var output = []; var episodeList = document.querySelector('.Content > .Container > .TpRwCont > main > article > header > .TPlayerCn.BgA > .EcBgA > .TPlayer').querySelectorAll('.TPlayerTb'); for (var x = 0; x < episodeList.length; x++) { var episode = episodeList[x]; var link = episode.innerHTML.split('src=\"')[1].split('\"')[0].replace(/&amp;/gi, '&').replace(/#038;/gi, ''); var outputObject = new Output(link,'',moduleID,'false',headers); output.push(outputObject); } episodeObject = new EpisodeObject('','',headers,extraInfo,'','',output); var finalJson = JSON.stringify(episodeObject); savedData.innerHTML = finalJson;",
      "output": [
        {
          "link": "",
          "moduleID": "",
          "linkIdentifier": "",
          "isDecodable": "false",
          "headers": [
            {
              "key": "key",
              "value": "value"
            }
          ]
        }
      ]
    }
  ]
}
