{
  "moduleName": "Wiflix",
  "moduleInitials": "WF",
  "moduleDesc": "Katsu module for wiflix",
  "developer": "Frizrat",
  "moduleID": "22020621",
  "moduleImage": "https://wiflix.land/templates/wiflix/dleimages/logo-ogp.png",
  "moduleVersion": "1.3",
  "moduleLenguage": "FR, VostFr",
  "moduleHasVideos": "true",
  "randomizeUserAgent": "false",
  "baseURL": "https://wiflix.land/",
  "mainPageLeftTitle": "Top films",
  "mainPageRightTitle": "Top séries",
  "blackListed": [
    ""
  ],
  "mainPage": [
    {
      "request": "https://wiflix.land/",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(lastEpisodes,lastAnimes) { this.lastEpisodes = lastEpisodes; this.lastAnimes = lastAnimes; } function LastAnimes(moduleID,image,link,title) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; } function LastEpisodes(moduleID,image,link,title,episode) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.episode = episode; } function MainPageObject(request,headers,method,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.headers = headers; this.method = method; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '22020621'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var mainPageObject; var output; var lastAnimes = []; var lastEpisodes = []; var series = document.querySelector('.floaters.clearfix > .block-main').querySelectorAll('.mov.clearfix > .mov-i'); for (serie of series) { var image = serie.querySelector('img').src; if (!image.includes(parsedJson.request)) { image = parsedJson.request + image; } var link = serie.querySelector('.mov-mask').getAttribute('data-link'); var title = serie.querySelector('img').alt; lastAnimes.push(new LastAnimes (moduleID,image,link,title)); } var films = document.querySelector('.floaters.clearfix').querySelectorAll('.block-main')[1].querySelectorAll('.mov.clearfix > .mov-i'); for (film of films) { var image = film.querySelector('img').src; if (!image.includes(parsedJson.request)) { image = parsedJson.request + image; } var link = film.querySelector('.mov-mask').getAttribute('data-link'); var title = film.querySelector('img').alt; var episode = 'Film'; lastEpisodes.push(new LastEpisodes (moduleID,image,link,title,episode)); } while (lastEpisodes.length % 2 != 0) { lastEpisodes.push(lastEpisodes[0]); } while (lastAnimes.length % 3 != 0) { lastAnimes.push(lastAnimes[0]); } output = new Output(lastEpisodes,lastAnimes); mainPageObject = new MainPageObject('',headers,'',extraInfo,'','',output); var finalJson = JSON.stringify(mainPageObject); savedData.innerHTML = finalJson;",
      "output": {
        "lastEpisodes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": "",
            "episode": ""
          }
        ],
        "lastAnimes": [
          {
            "moduleID": "0",
            "image": "",
            "link": "",
            "title": ""
          }
        ]
      }
    }
  ],
  "search": [
    {
      "request": "https://wiflix.land/index.php/search/?do=search&subaction=search&story=<searched>",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "separator": "+",
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,type,voice,stars) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.type = type; this.voice = voice; this.stars = stars; } function SearchObject(request,method,headers,separator,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.separator = separator; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '22020621'; var headers = [new Header('','')]; var extraInfo = [new ExtraInfo('')]; var searchPageObject; var output = []; var baseURL = 'https://wiflix.land/'; var series = document.querySelector('#dle-content').querySelectorAll('.mov.clearfix'); for (var x = 0; x < series.length; x++) { var serie = series[x].querySelector('.mov-i'); var image = serie.querySelector('img').src; if (!image.includes(baseURL)) { image = baseURL + image; } var link = serie.querySelector('.mov-mask').getAttribute('data-link'); var title = serie.querySelector('img').alt; var type = serie.querySelector('.mov-m'); if (type == null) { type = 'Film'; } else { type = 'Série'; } var voice = series[x].querySelector('.movie-text > .movie-lines').querySelectorAll('li')[4].querySelector('.ml-desc').innerText; var note = '★★★★★'; output.push(new Output(moduleID,image,link,title,type,voice,note)); } searchPageObject = new SearchObject('','',headers,'+',extraInfo,'','',output); var finalJson = JSON.stringify(searchPageObject); savedData.innerHTML = finalJson;",
      "output": [
        {
          "moduleID": "0",
          "image": "",
          "link": "",
          "title": "",
          "type": "",
          "voice": "",
          "stars": ""
        }
      ]
    }
  ],
  "info": [
    {
      "request": "this Can be empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "false",
      "javaScript": "function Header(key,value) { this.key = key; this.value = value; } function ExtraInfo(value) { this.value = value; } function Output(moduleID,image,link,title,description,genres,type,status,episodes) { this.moduleID = moduleID; this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.type = type; this.status = status; this.episodes = episodes; } function Episodes(link,moduleID,isDecodable) { this.link = link; this.moduleID = moduleID; this.isDecodable = isDecodable; } function InfoObject(request,method,headers,extraInfo,loadJavascript,javaScript,output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output; } var savedData = document.getElementById('katsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var moduleID = '22020621'; var headers = [new Header('', '')]; var extraInfo = [new ExtraInfo('')]; var infoObject; var output; var episodes = []; var type = document.querySelector('h2.screenshots-title'); var infoList = document.querySelector('.col-mov-right > .mov-list').querySelectorAll('li'); var status = ''; var genres = []; var desc = ''; var image = 'https://wiflix.land/' + document.querySelector('.mov-img > img').src; var title = document.querySelector('.full-title').innerText; var statusVo = ''; var statusVf = ''; if (type != null) { type = 'Film'; desc = document.querySelector('.screenshots-full').innerText.split('Synopsis')[1].trim(); var link = parsedJson.request; episodes.push(new Episodes(link,moduleID,'false')); } else { type = 'Série'; for (info of infoList) { if (info.querySelector('.mov-label').innerText == 'Synopsis:') { desc = info.querySelector('.mov-desc').innerText; } } var episodeListVo = document.querySelector('.epblocks > .blocvostfr > .eplist').querySelectorAll('li'); for (var x = 0; x < episodeListVo.length; x++) { var link = parsedJson.request + '#vostfr' + (x + 1); episodes.push(new Episodes(link,moduleID,'false')); } if (x > 0) { statusVo = 'Vo'; } var episodeListVf = document.querySelector('.epblocks > .blocfr > .eplist').querySelectorAll('li'); for (var y = 0; y < episodeListVf.length; y++) { var link = parsedJson.request + '#vf' + (y + 1); episodes.push(new Episodes(link,moduleID,'false')); } if (y > 0) { statusVf = 'Vf'; } } status = statusVo + ' ' + statusVf; desc = ' Synopsis ' + desc; if (status != 'Vo Vf') { } else { desc = 'Les ' + x + ' premiers épisodes sont en VostFr et les ' + y + ' derniers sont en Vf. ' + desc; } output = new Output(moduleID,image,parsedJson.request,title,desc,genres,type,status,episodes); infoObject = new InfoObject('','get',headers,extraInfo,'', '',output); var finalJson = JSON.stringify(infoObject); savedData.innerHTML = finalJson;",
      "output": {
        "moduleID": "0",
        "image": "",
        "link": "",
        "title": "",
        "description": "",
        "genres": [
          ""
        ],
        "type": "",
        "status": "",
        "episodes": [
          {
            "link": "",
            "moduleID": "",
            "isDecodable": "false"
          }
        ]
      }
    }
  ],
  "episodes": [
    {
      "request": "This can be Empty",
      "method": "get",
      "headers": [
        {
          "key": "",
          "value": ""
        }
      ],
      "extraInfo": [
        {
          "value": ""
        }
      ],
      "loadJavascript": "true",
      "javaScript": "function Header(key, value) { this.key = key; this.value = value;}function ExtraInfo(value) { this.value = value;}function Output(link, linkIdentifier, moduleID, isDecodable, headers) { this.link = link; this.linkIdentifier = linkIdentifier; this.moduleID = moduleID; this.isDecodable = isDecodable; this.headers = headers;}function EpisodeObject(request, method, headers, extraInfo, loadJavascript, javaScript, output) { this.request = request; this.method = method; this.headers = headers; this.extraInfo = extraInfo; this.loadJavascript = loadJavascript; this.javaScript = javaScript; this.output = output;}var savedData = document.getElementById('katsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var moduleID = '22020621';var headers = [new Header('', '')];var extraInfo = [new ExtraInfo('')];var episodeObject;var output = [];if(parsedJson.request != parsedJson.request.split('film')) { var lecteurs = document.querySelector('.tabsbox.filmlinks.ignore-select > .tabs-sel.linkstab').querySelectorAll('a'); for(lecteur of lecteurs) { var link = lecteur.href.replace('/vd.php?u=', ''); output.push(new Output(link, '', moduleID, 'false', headers)); }} else { var x = parsedJson.request.split('#vostfr')[1]; var epVo = '.ep' + x + 'vs'; var episodes = document.querySelector('.hostsblock').querySelectorAll(epVo); for(episode of episodes) { var lecteurs = episode.querySelectorAll('a'); for(lecteur of lecteurs) { var link = lecteur.href.replace('/vd.php?u=', ''); output.push(new Output(link, '', moduleID, 'false', headers)); } } var y = parsedJson.request.split('#vf')[1]; var epVf = '.ep' + y + 'vf'; var episodes = document.querySelector('.hostsblock').querySelectorAll(epVf); for(episode of episodes) { var lecteurs = episode.querySelectorAll('a'); for(lecteur of lecteurs) { var link = lecteur.href.replace('/vd.php?u=', ''); output.push(new Output(link, '', moduleID, 'false', headers)); } }}episodeObject = new EpisodeObject('', '', headers, extraInfo, '', '', output);var finalJson = JSON.stringify(episodeObject);savedData.innerHTML = finalJson;",
      "output": [
        {
          "link": "",
          "moduleID": "",
          "linkIdentifier": "",
          "isDecodable": "false",
          "headers": [
            {
              "key": "key",
              "value": "value"
            }
          ]
        }
      ]
    }
  ]
}
